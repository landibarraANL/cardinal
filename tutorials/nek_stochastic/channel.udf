#include "udf.hpp"

void uservp(nrs_t *nrs, double time, occa::memory o_U, occa::memory o_S, occa::memory o_UProp, occa::memory o_SProp)
{
  if (!nrs->usrwrk)
    return;

  dfloat k = nrs->usrwrk[1 * nrs->fieldOffset + 0];

  // apply that value; in nekRS, the 0th slot in o_SProp represents the 'conductivity'
  // field in the par file
  auto mesh = nrs->cds->mesh[0];
  auto o_diff = o_SProp + 0 * nrs->fieldOffset * sizeof(dfloat);
  platform->linAlg->fill(mesh->Nlocal, k, o_diff);
}

void UDF_LoadKernels(occa::properties & kernelInfo)
{
}

void UDF_Setup(nrs_t *nrs)
{
  udf.properties = &uservp;

  auto mesh = nrs->cds->mesh[0];

  int n_gll_points = mesh->Np * mesh->Nelements;
  for (int n = 0; n < n_gll_points; ++n)
    nrs->cds->S[n + 0 * nrs->cds->fieldOffset[0]] = 500.0; // temperature
}
