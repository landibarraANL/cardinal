[Tests]
  [invalid_inlet_boundary_multiple]
    type = RunException
    input = nek.i
    cli_args = 'Problem/inlet_boundary="1 2"'
    expect_err = "'inlet_boundary' can only have a single ID listed \n"
               "but 'inlet_boundary' has 2 IDs listed."
    requirement = "The system shall throw an error if trying to assign inlet_boundary "
                  "to multiple boundary IDs."
    required_objects = 'NekRSSeparateDomainProblem'
  []
  [invalid_inlet_boundary_mesh]
    type = RunException
    input = nek.i
    cli_args = 'Problem/inlet_boundary="2"'
    expect_err = "Invalid 'inlet_boundary' entry: 2 \n"
                 "'inlet_boundary' must be in 'boundary' supplied to NekRSMesh, but 'boundary' = 1."

    requirement = "The system shall throw an error if trying to assign inlet_boundary "
                  "to an ID not contained in NekRSMesh's boundary input."
    required_objects = 'NekRSSeparateDomainProblem'
  []
  [invalid_inlet_boundary_id]
    type = RunException
    input = nek.i
    cli_args = 'Problem/inlet_boundary="9"'
    expect_err = "Invalid 'inlet_boundary' entry: 9"
                 "\n\n"
                 "NekRS assumes the boundary IDs are ordered contiguously beginning at 1. "
                 "For this problem, NekRS has 8 boundaries. "
                 "Did you enter a valid 'inlet_boundary'?"
    requirement = "The system shall throw an error if trying to assign inlet_boundary "
                  "to an ID not contained in NekRS boundary IDs."
    required_objects = 'NekRSSeparateDomainProblem'
  []
  [invalid_outlet_boundary_multiple]
    type = RunException
    input = nek.i
    cli_args = 'Problem/outlet_boundary="1 2"'
    expect_err = "'outlet_boundary' can only have a single ID listed \n"
               "but 'outlet_boundary' has 2 IDs listed."
    requirement = "The system shall throw an error if trying to assign outlet_boundary "
                  "to multiple boundary IDs."
    required_objects = 'NekRSSeparateDomainProblem'
  []
  [invalid_outlet_boundary_id]
    type = RunException
    input = nek.i
    cli_args = 'Problem/outlet_boundary="9"'
    expect_err = "Invalid 'outlet_boundary' entry: 9"
                 "\n\n"
                 "NekRS assumes the boundary IDs are ordered contiguously beginning at 1. "
                 "For this problem, NekRS has 8 boundaries. "
                 "Did you enter a valid 'outlet_boundary'?"
    requirement = "The system shall throw an error if trying to assign outlet_boundary "
                  "to an ID not contained in NekRS boundary IDs."
    required_objects = 'NekRSSeparateDomainProblem'
  []
[]
