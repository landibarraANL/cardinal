[Tests]

  # can't use more processors than elements, so all tests are limited to 12 ranks

  [executioner]
    type = RunException
    input = executioner.i
    expect_err = "A 'Transient' executioner must be used with 'NekRSProblem', but you have specified the 'Steady' executioner!"
    requirement = "The system shall error if NekRSProblem is not paired with the correct executioner."
    max_parallel = 12
    required_objects = 'NekRSProblem'
  []
  [mesh]
    type = RunException
    input = mesh.i
    expect_err = "Mesh for 'NekRSProblem' must be of type 'NekRSMesh', but you have specified a 'GeneratedMesh'!"
    requirement = "The system shall error if NekRSProblem is not paired with the correct mesh type."
    max_parallel = 12
    required_objects = 'NekRSProblem'
  []
  [problem_pp]
    type = RunException
    input = problem_pp.i
    expect_err = "This postprocessor can only be used with wrapped Nek cases!"
    requirement = "The system shall error if a Nek postprocessor is not paired with the correct problem."
    max_parallel = 12
    required_objects = 'NekRSProblem'
  []
  [problem_uo]
    type = RunException
    input = problem_uo.i
    expect_err = "This user object can only be used with wrapped Nek cases!"
    requirement = "The system shall error if a Nek userobject is not paired with the correct problem."
    max_parallel = 12
    required_objects = 'NekRSProblem'
  []
  [problem_mesh]
    type = RunException
    input = problem_mesh.i
    expect_err = "This mesh can only be used with wrapped Nek cases!"
    requirement = "The system shall error if a NekRSMesh is used without a corresponding Nek-wrapped"
                  "problem."
    max_parallel = 12
    required_objects = 'NekRSProblem'
  []
  [timestepper]
    type = RunException
    input = timestepper.i
    expect_err = "The 'NekTimeStepper' stepper must be used with 'NekRSProblem', "
                 "but you have specified the 'ConstantDT' time stepper!"
    requirement = "The system shall error if NekRSProblem is not paired with the correct time stepper."
    max_parallel = 12
    required_objects = 'NekRSProblem'
  []
  [missing_flux_bc]
    type = RunException
    input = nek_bc.i
    expect_err = "In order to send a boundary heat flux to nekRS, you must have a flux condition "
                 "for each 'boundary' set in 'NekRSMesh'!\nBoundary 2 is of type 'zeroGradient' "
                 "instead of 'fixedGradient'."
    requirement = "MOOSE shall throw an error if there is no receiving heat flux boundary condition "
                  "on the nekRS boundaries that are coupled to MOOSE."
    max_parallel = 12
    required_objects = 'NekRSProblem'
  []
  [boundary_id]
    type = RunException
    input = boundary_id.i
    expect_err = "Invalid 'boundary' entry: 8\n\nnekRS assumes the boundary IDs are ordered "
                 "contiguously beginning at 1. For this problem, nekRS has 6 boundaries. "
                 "Did you enter a valid 'boundary'?"
    requirement = "MOOSE shall throw an error if an invalid boundary is specified for the construction "
                  "of nekRS's mesh as a MooseMesh."
    max_parallel = 12
    required_objects = 'NekRSProblem'
  []
  [separate_boundary]
    type = RunException
    input = separate_boundary.i
    expect_err = "In order to initialize the separate domain coupling, 'boundary' "
                 "should contain,\nat a minimum, all boundaries listed in 'inlet_boundary'"
    requirement = "MOOSE shall throw an error if 'boundary' is empty for separate domain coupling, "
                  "because the correct internal arrays would not be initialized"
    max_parallel = 12
    required_objects = 'NekRSProblem'
  []
  [scaling_mismatch]
    type = RunException
    input = mesh.i
    cli_args = 'Mesh/type=NekRSMesh Mesh/scaling=0.1 Problem/nondimensional=true Problem/L_ref=0.2 Mesh/volume=true'
    expect_err = "If solving NekRS in nondimensional form, you must choose"
    requirement = "The system shall error if there is a mismatch between the scaling of the mesh and NekRS problem."
    max_parallel = 12
    required_objects = 'NekRSProblem'
  []
[]
