[Tests]
  [wrong_length]
    type = RunException
    input = openmc_incorrect_length.i
    expect_err = "'temperature_variables' and 'temperature_blocks' must be the same length!"
    requirement = "The system shall error if the blocks and variables are not the same length"
    required_objects = 'OpenMCCellAverageProblem'
  []
  [empty]
    type = RunException
    input = openmc.i
    cli_args = 'Problem/temperature_blocks=" ; 2"'
    expect_err = "Entries in 'temperature_blocks' cannot be empty!"
    requirement = "The system shall error if a sub-vector is empty"
    required_objects = 'OpenMCCellAverageProblem'
  []
  [multi_temp]
    type = RunException
    input = openmc.i
    cli_args = 'Problem/temperature_variables="solid_temp solid_temp; fluid_temp"'
    expect_err = "Each entry in 'temperature_variables' must be of length 1. Entry 0 is of length 2."
    requirement = "The system shall error if an entry in temperature_variables is not of unity length"
    required_objects = 'OpenMCCellAverageProblem'
  []
  [block_already_used]
    type = RunException
    input = openmc.i
    cli_args = 'Problem/temperature_variables="solid_temp; solid_temp; solid_temp; solid_temp" Problem/temperature_blocks="1; 2; 2; 3"'
    expect_err = "Subdomains cannot be repeated in 'temperature_blocks'! Subdomain '2' is duplicated."
    requirement = "The system shall error if trying to collate multiple temperature variables onto the same block due to undefined behavior"
    required_objects = 'OpenMCCellAverageProblem'
  []
  [collate_temps]
    type = CSVDiff
    input = openmc.i
    csvdiff = openmc_out.csv
    requirement = "The system shall allow reading temperature from user-defined names, with one temperature variable per cell"
    required_objects = 'OpenMCCellAverageProblem'
  []
  [multi_vars]
    type = CSVDiff
    input = multi_vars.i
    csvdiff = multi_vars_out.csv
    requirement = "The system shall allow reading temperature from user-defined names, with more than one temperature variable per cell"
    required_objects = 'OpenMCCellAverageProblem'
  []
  [multi_vars_alt]
    type = CSVDiff
    input = multi_vars.i
    csvdiff = multi_vars_out.csv
    cli_args = "Problem/temperature_variables='solid_temp; solid_temp; fluid_temp; other_temp' Problem/temperature_blocks='1; 3; 2; 10'"
    requirement = "The system shall allow lumping of subdomains together, equivalent to explicitly listing temperature correspondence to blocks"
    required_objects = 'OpenMCCellAverageProblem'
  []
[]
