C Linearized Model problem described in Ananias G. Tomboulides et. al
C JCP 146, CP986079, 1998

c-----------------------------------------------------------------------
      SUBROUTINE USERCHK

      INCLUDE 'SIZE'
      INCLUDE 'TOTAL'
      INCLUDE 'CASEDATA'

      END
C-----------------------------------------------------------------------
      SUBROUTINE USERIC (IX,IY,IZ,ieg)

C   Set initial conditions

      integer ix,iy,iz,ieg

      INCLUDE 'SIZE'
      INCLUDE 'TOTAL'
      INCLUDE 'NEKUSE'
      INCLUDE 'CASEDATA'

      real xd

      p0th = 1.0

      XD = X/P_DELTA

      UX = 0.5*(3.0 + tanh(XD))
      UY = 0.0
      UZ = 0.0

      TEMP = 0.5*(3.0 + tanh(XD))

      RETURN
      END
C-----------------------------------------------------------------------
      subroutine usrdat

      return
      end
C-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'
      include 'CASEDATA'
      
      common /scnrs/ sc_nrs(10)
      real               sc_nrs

      logical ifaln,ifnorx,ifnory,ifnorz

      P_DELTA = sc_nrs(1)
      P_GAMMA = sc_nrs(2)

      call rescale_x(xm1,-1.0,1.0)
      call rescale_x(ym1, 0.0,1.0)
      call rescale_x(zm1, 0.0,1.0)

      do iel=1,nelt
      do ifc=5,6
         cbc(ifc,iel,1) = 'P  ' ! required for kludge (see below)
      enddo
      enddo


      do iel=1,nelt
      do ifc=1,2*ndim
         call chknord(ifaln,ifnorx,ifnory,ifnorz,ifc,iel)
         if (cbc(ifc,iel,1) .eq. 'v  ' .and. ifnorx) then 
           boundaryID(ifc,iel) = 1
         endif
         if (cbc(ifc,iel,1) .eq. 'v  ') cbc(ifc,iel,2) = 't  ' 
         if (cbc(ifc,iel,1) .eq. 'P  ') cbc(ifc,iel,2) = 'P  ' 
      enddo
      enddo

      return
      end
C-----------------------------------------------------------------------
      subroutine usrdat3

      return
      end
C-----------------------------------------------------------------------
      subroutine usrsetvert(glo_num,nel,nx,ny,nz) ! to modify glo_num
      integer*8 glo_num(1)

      ! kludge for periodic bc in z
      nxy  = nx*ny
      nxyz = nx*ny*nz
      do iel = 1,nel
         ioff = nxyz*(iel-1)
         do ixy = 1,nxy
            glo_num(ioff + nxy*(nz-1) + ixy) = glo_num(ioff + ixy)
         enddo
      enddo

      return
      end
c-----------------------------------------------------------------------
